// Generated by Swift version 1.0 (swift-600.0.51.3)

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if defined(__has_include) && __has_include(<uchar.h>)
# include <uchar.h>
#elif __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
#endif
#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted) 
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"

#if defined(__has_feature) && __has_feature(modules)
@import UIKit;
@import CoreGraphics;
@import Foundation;
#endif

@class UIColor;
@class NSMutableIndexSet;
@class UIImage;
@class NSIndexSet;
@class NSCoder;

SWIFT_CLASS("_TtC10DigitalWil14FrostedSidebar")
@interface FrostedSidebar : UIViewController
@property (nonatomic) CGFloat width;
@property (nonatomic) BOOL showFromRight;
@property (nonatomic) CGFloat animationDuration;
@property (nonatomic) CGSize itemSize;
@property (nonatomic) UIColor * tintColor;
@property (nonatomic) UIColor * itemBackgroundColor;
@property (nonatomic) CGFloat borderWidth;
@property (nonatomic) NSMutableIndexSet * selectedIndices;
@property (nonatomic) BOOL isSingleSelect;
@property (nonatomic) BOOL calloutsAlwaysSelected;
- (instancetype)initWithItemImages:(NSArray *)itemImages colors:(NSArray *)colors selectedItemIndices:(NSIndexSet *)selectedItemIndices OBJC_DESIGNATED_INITIALIZER;
- (instancetype)initWithCoder:(NSCoder *)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)loadView;
- (BOOL)shouldAutorotate;
- (NSInteger)supportedInterfaceOrientations;
- (void)willAnimateRotationToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation duration:(NSTimeInterval)duration;
- (void)showInViewController:(UIViewController *)viewController animated:(BOOL)animated;
- (void)dismissAnimated:(BOOL)animated completion:(void (^)(BOOL))completion;
@end

@class UIView;


/// HUDController controls showing and hiding of the HUD, as well as its contents and touch response behavior.
/// It is recommended to use the PKHUD.Controller.sharedController instance, nevertheless you are free to instantiate your own.
SWIFT_CLASS("_TtC10DigitalWil13HUDController")
@interface HUDController
+ (HUDController *)sharedController;
- (instancetype)init OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic) BOOL dimsBackground;
@property (nonatomic) BOOL userInteractionOnUnderlyingViewsEnabled;
@property (nonatomic) UIView * contentView;
- (void)show;
- (void)hideWithAnimated:(BOOL)anim;
- (void)hideAfterDelay:(NSTimeInterval)delay;
@end

#pragma clang diagnostic pop
